return {
  basic = [
    "basic/assert.toku",
    "basic/clone.toku",
    "basic/compat.toku",
    "basic/error.toku",
    "basic/gc.toku",
    "basic/getargs.toku",
    "basic/getclass.toku",
    "basic/getfield.toku",
    "basic/getmethods_unwrapmethod.toku",
    "basic/getsuper.toku",
    "basic/ipairs.toku",
    "basic/len.toku",
    "basic/loadfile.toku",
    "basic/load.toku",
    "basic/nextfield.toku",
    "basic/pairs.toku",
    "basic/pcall.toku",
    "basic/print.toku",
    "basic/rawequal.toku",
    "basic/rawget.toku",
    "basic/rawset.toku",
    "basic/runfile.toku",
    "basic/setmetatable_getmetatable.toku",
    "basic/setmethods.toku",
    "basic/tonum.toku",
    "basic/tostr.toku",
    "basic/typeof.toku",
    "basic/warn.toku",
    "basic/xpcall.toku",
  ],
  other = [
    "other/bitwise.toku",
    "other/calls.toku",
    "other/errors.toku",
    "other/heavy.toku",
    "other/incrementalgc.toku",
    "other/scanner.toku",
    "other/verybig.toku",
  ],
  reg = [
    "reg/find.toku",
    "reg/match.toku",
    "reg/reg.toku",
  ],
  io = [
    "io/files.toku",
    "io/tmpfile.toku",
  ],
  list = [
    "list/concat.toku",
    "list/enumerate.toku",
    "list/flatten.toku",
    "list/len.toku",
    "list/move.toku",
    "list/new.toku",
    "list/remove_insert_isordered.toku",
    "list/shrink.toku",
    "list/sort.toku",
  ],
  os = [
    "os/clock.toku",
    "os/date_time.toku",
    "os/getenv_setenv.toku",
    "os/popen_pclose_execute.toku",
  ],
  utf8 = [
    "utf8/utf8.toku",
  ],
  syntax = [
    "syntax/addition.toku",
    "syntax/bitwise_and.toku",
    "syntax/bitwise_exclusive_or.toku",
    "syntax/bitwise_or.toku",
    "syntax/bool.toku",
    "syntax/character_constant.toku",
    "syntax/class.toku",
    "syntax/closure.toku",
    "syntax/concatenation.toku",
    "syntax/division.toku",
    "syntax/empty_file.toku",
    "syntax/equal.toku",
    "syntax/exponentiation.toku",
    "syntax/float_decimal.toku",
    "syntax/float_hexadecimal.toku",
    "syntax/function.toku",
    "syntax/greater_equal.toku",
    "syntax/greater_than.toku",
    "syntax/integer_decimal.toku",
    "syntax/integer_hexadecimal.toku",
    "syntax/integer_octal.toku",
    "syntax/lbshift.toku",
    "syntax/less_equal.toku",
    "syntax/less_than.toku",
    "syntax/list.toku",
    "syntax/logical_and.toku",
    "syntax/logical_or.toku",
    "syntax/modulo.toku",
    "syntax/multiplication.toku",
    "syntax/nil.toku",
    "syntax/not_equal.toku",
    "syntax/rbshift.toku",
    "syntax/special_numeric_constants.toku",
    "syntax/statement_block.toku",
    "syntax/statement_class.toku",
    "syntax/statement_continue.toku",
    "syntax/statement_foreach.toku",
    "syntax/statement_for.toku",
    "syntax/statement_function.toku",
    "syntax/statement_if_else.toku",
    "syntax/statement_local_class.toku",
    "syntax/statement_local_function.toku",
    "syntax/statement_local.toku",
    "syntax/statement_loop.toku",
    "syntax/statement_switch.toku",
    "syntax/statement_while.toku",
    "syntax/string.toku",
    "syntax/subtraction.toku",
    "syntax/syntax1.toku",
    "syntax/syntax2.toku",
    "syntax/syntax3.toku",
    "syntax/table.toku",
    "syntax/unary_bitwise_not.toku",
    "syntax/unary_logical_not.toku",
    "syntax/unary_minus.toku",
    "syntax/varargs.toku",
  ],
  math = [
    "math/abs.toku",
    "math/deg_rad.toku",
    "math/exp.toku",
    "math/floor_ceil_toint.toku",
    "math/fmod.toku",
    "math/log.toku",
    "math/math.toku",
    "math/min_max.toku",
    "math/modf.toku",
    "math/sin_cos_tan_asin_acos_atan.toku",
    "math/sqrt.toku",
    "math/srand_rand_randf.toku",
    "math/type.toku",
    "math/ult.toku",
  ],
  debug = [
    "debug/db.toku",
    "debug/getinfo.toku",
    "debug/getlocal_setlocal.toku",
    "debug/getupvalue_setupvalue.toku",
    "debug/upvalueid_upvaluejoin.toku",
  ],
  package = [
    "package/import.toku",
  ],
  string = [
    "string/bytes.toku",
    "string/byte.toku",
    "string/char.toku",
    "string/cmp.toku",
    "string/find.toku",
    "string/fmt.toku",
    "string/join.toku",
    "string/repeat.toku",
    "string/replace.toku",
    "string/reverse.toku",
    "string/rfind.toku",
    "string/rsplit.toku",
    "string/split.toku",
    "string/startswith.toku",
    "string/substr.toku",
    "string/swapcase.toku",
    "string/swaplower.toku",
    "string/swapupper.toku",
    "string/tolower.toku",
    "string/toupper.toku",
  ],
  interpreter = [
    "interpreter/interpreter.toku",
  ],
};
